<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Operations for Mysql in Linux]]></title>
    <url>%2Fposts%2Ff4c81e09.html</url>
    <content type="text"><![CDATA[Install mysql 1yum -y install mysql-server Start mysql 1service mysqld start Add users. 1234mysql -uroot -pinsert into mysql.user(user,host,password) values('user_name','localhost',password('password'));flush privileges; The value of host: %: connect to mysql server from any other machine localhost: just local host ip_address: specific ip address Grant authority to users. 12grant all privileges on [db_name].[db_table_name] to [mysql_user_name]@[the_value_of_host] identified by '[mysql_user_password]';flush privileges; The value of [the_value_of_host]: %: connect to mysql server from any other machine localhost: just local host ip_address: specific ip address [all privileges] can be set with specific authority(“select,delete,update,create,drop”) [db_name] can be set with all databases(“*”) [db_table_name] can be set with all tables(“*”) Update password. 12345mysql -uroot -puse mysql;update user set password=password('your_new_password') where user='user_name' and host='host_name';flush privileges; Delete users. 12345mysql -uroot -puse mysql;delete from user where user='user_name' and host='host_name';flush privileges; Attention:It cannot be active when you forgot to run a command(“flush privileges”).]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Auto-start Services on Boot in Linux]]></title>
    <url>%2Fposts%2F857f09d5.html</url>
    <content type="text"><![CDATA[CentOS6 Show list of services that start on boot. 1chkconfig --list Add a service to auto-start on boot. 12chkconfig --add service_namechkconfig service_name on Confirm script is added successfully 1chkconfig --list service_name Disable an auto-start services. 12chkconfig service_name offchkconfig --del service_name CentOS7 Add a service to auto-start on boot. 1systemctl enable service_name Disable an auto-start service. 1systemctl disable service_name Check the status of auto-start service. 1systemctl status service_name]]></content>
      <categories>
        <category>Operation</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Attention for Using Markdown code block]]></title>
    <url>%2Fposts%2Fd2fb4425.html</url>
    <content type="text"><![CDATA[When you are using markdown code block, you may meet a strange circumstance that disorder within code blocks. Just like the image blow. So, when you confront same problem like me, you just need to delete your space symbols after your end of code block. If you put one more space after your code block, the system will not recognize that’s a end signal of code block.]]></content>
      <categories>
        <category>Language</category>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Step by Step Tutorial for Ambari Installation]]></title>
    <url>%2Fposts%2F7f0f012a.html</url>
    <content type="text"><![CDATA[System RequirementsAt first, we need to think about the setups of VMs. So, I list a table for VMs below. hostname ip operating system RAM disk space package master1.bigdata.com 192.168.110.150 centos6.5 64位 16g 50g ambari-servernamenode slave1.bigdata.com 192.168.110.151 centos6.5 64位 16g 50g ambari-agentdatanode slave2.bigdata.com 192.168.110.152 centos6.5 64位 16g 50g ambari-agentdatanode VM Deployment Login VMware vsphere client system Create 3 VMs with specific system requirements Set the name of VM Choose data storage Choose hardware configuration Load centos6 ios file into CD-ROM when booting You can use minimum version of centos. Then you need to click the option “Running system installation with system booting”. Configuration complete Operating system installation Power on the VM Choose the first one. Click “skip” to continue. Choose language, keyborad and timezone. Set root password. Click “Using entire drive” to continue. Choose “Write changes to disk” to continue. Reboot. VM Preparation1. Configuration and Installation for VMs(master and slave servers) Install java. 1yum -y install java Enable network adapter. 123vi /etc/sysconfig/network-scripts/ifcfg-eth0vi /etc/sysconfig/network-scripts/ifcfg-eth1vi /etc/sysconfig/network-scripts/ifcfg-eth2 Then, enable it to run after system booting 1ONBOOT=yes Using tool ping to check status of accessing public network and local network. Change system’s hostname on all servers. Update file(/etc/sysctl.conf), add a item 1kernel.domainname=master1.bigdata.com Update file(/etc/hosts), add doamins. 123192.168.110.150 master1.bigdata.com master1192.168.110.151 slave1.bigdata.com slave1192.168.110.152 slave2.bigdata.com slave2 Update file(/etc/sysconfig/network) 12NETWORKING=yesHOSTNAME=master1.bigdata.com Reboot systems Check the correction of hostname 12hostnamehostname -f Set up password-less SSH on all servers Disable SELinux 1vi /etc/selinux/config Set disabled for SELinux: 1SELINUX=disabled Enable access for using public key. Warning: File name is sshd_config, not ssh_config. 1vi /etc/ssh/sshd_config Delete comment signal(“#”) blow: 123RSAAuthentication yesPubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys Generate public key and private key on master server. 1ssh-keygen -t rsa Then, click default option for configuration. Create directories and copy public key to slave servers. 123slave$ mkdir ~/.sshslave$ cd ~/.sshslave$ touch authorized_keys Login to master server, then copy public key: 1maseter$ scp ~/.ssh/id_rsa.pub root@slave1:~/.ssh Login to slave server, then copy content from public key to a file(authorized_keys): 1slave$ cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys Install ntpd on all servers. Check to see if you have installed ntpd. 1rpm -qa | grep ntp If not, install ntpd 1yum -y install ntp Close transparent huge page on all servers. Append code block to file(/etc/rc.local) for closing transparent huge page. 1vi /etc/rc.local code block: 123456if test -f /sys/kernel/mm/transparent_hugepage/enabled; thenecho never &gt; /sys/kernel/mm/transparent_hugepage/enabledfiif test -f /sys/kernel/mm/transparent_hugepage/defrag; thenecho never &gt; /sys/kernel/mm/transparent_hugepage/defragfi Reboot operating system. Check the status of transparent huge page to ensure the status is “never”. 1cat /sys/kernel/mm/redhat_transparent_hugepage/enabled 2. Set up a local repository on master server. Install local repository tool. 1yum install yum-utils createrepo Install http service. 1yum install httpd Start http service. 1service httpd start Install tool wget. 1yum -y install wget Download ambari &amp; hdp package files to master server. 123wget http://public-repo-1.hortonworks.com/ambari/centos6/2.x/updates/2.4.2.0/ambari-2.4.2.0-centos6.tar.gzwget http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.20/repos/centos6/HDP-UTILS-1.1.0.20-centos6.tar.gzwget http://public-repo-1.hortonworks.com/HDP/centos6/2.x/updates/2.4.3.0/HDP-2.4.3.0-centos6-rpm.tar.gz Copy ambari and hdp packages to http dir, then untar them. 12345cd /var/www/htmlmkdir hdptar -xvf ambari-2.4.2.0-centos6.tar.gz -C /var/www/htmltar -xvf HDP-2.4.3.0-centos6-rpm.tar.gz -C /var/www/html/hdptar -xvf HDP-UTILS-1.1.0.20-centos6.tar.gz -C /var/www/html/hdp Check repository address for next step. Ambari base URL and gpgkey: 12http://192.168.110.150/AMBARI-2.4.2.0/centos6/2.4.2.0-136/ http://192.168.110.150/AMBARI-2.4.2.0/centos6/2.4.2.0-136/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins HDP base URL and gpgkey: 12http://192.168.110.150/hdp/HDP/centos6/2.x/updates/2.4.3.0http://192.168.110.150/hdp/HDP/centos6/2.x/updates/2.4.3.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins HDP-UTILS base URL and gpgkey(gpgkey file same with HDP gpgkey file): 12http://192.168.110.150/hdp/HDP-UTILS-1.1.0.20/repos/centos6http://192.168.110.150/hdp/HDP/centos6/2.x/updates/2.4.3.0/RPM-GPG-KEY/RPM-GPG-KEY-Jenkins Copy repository config files. ambari repo file: 1wget -nv http://public-repo-1.hortonworks.com/ambari/centos6/2.x/updates/2.4.3.0/ambari.repo -O /etc/yum.repos.d/ambari.repo hdp repo file: 1cp /var/www/html/hdp/HDP/centos6/2.x/updates/2.4.3.0/hdp.repo /etc/yum.repos.d/ Update repository config files. You ought to renew base URL and gpgkey URL in your ambari.repo and hdp.repo files. 3. Ambari-server setup on master server Install ambari server 1yum install /var/www/html/AMBARI-2.4.2.0/centos6/2.4.2.0-136/ambari/ambari-server-2.4.2.0-136.x86_64.rpm Run command for ambari setup. 1ambari-server setup If you are not disable the SELinux, you need to press “y”. If your ambari server under user root, you just need to press “n”. If you are not disable iptalbes, you need to press “y” to continue. Select JDK version, then follow steps to install it. Choose database type You can choose embeded database. If you choose mysql, you need to install mysql database on master server and input info for ambari setup. Then put a mysql connector into specific path and run a command below to specify the path of connector. 1ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar Run ambari-server 1ambari-server start 4. Ambari-agent setup on slave servers. Copy ambari-agent rpm file to slave servers. 1scp /var/www/html/AMBARI-2.4.2.0/centos6/2.4.2.0-136/ambari/ambari-agent-2.4.2.0-136.x86_64.rpm root@slave_server_ip:~ Install ambari-agent. 1yum install ~/ambari-agent-2.4.2.0-136.x86_64.rpm Renew ambari-server URL in config file. 1vi /etc/ambari-agent/ambari.ini Renew ambari-server URL below: 12[server]hostname = master1.bigdata.com Run ambari-agent. 1ambari-agent start InstallationBefore you launch the ambari installation webUI, you ought to ensure things below. Start the service httpd. Stop the service iptables. Start the ambari-server on master server and ambari-agent on slave servers. If you want to start quickly, it is advisable to choose default options. Open your brower, then access to the WebUI and click the item (“Launch Install Wizard”) URL: 192.168.110.150:8080 Account: admin Password: admin Get Started Select Version Choose local repository, then input base URL of HDP and HDP-UTILS. Install Options Input your master’s hostname and slaves’ hostnames. Then copy your master’s ssh private key into item. Confirm Hosts Just click “ok” to continue. Choose Services Choose what service you want to add into your system. You can add new services into your system later on. Just click “ok” to continue. Assign Masters Assign Slaves and Clients Customize ServicesYou just need to input info for items with red exclamation mark. Review Install, Start and TestIf you get to this step successfully, you can drink a cup of coffee and enjoy this time. SummarySo now, say hello world to Ambari.]]></content>
      <categories>
        <category>Back-end</category>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>Ambari</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Odyssey]]></title>
    <url>%2Fposts%2F56e69a1d.html</url>
    <content type="text"><![CDATA[It is really a great determination for me to give up comfortable and easy enviroment where I can complete all tasks successfully. Now, I had been to Shanghai for almost one month. And I need to study new development technology and make new friends among this unfamiliar city where I will be surrounded with loneliness. Nevertheless, I really hope that I can meet all kinds of difficultis which offer me huge experience to upgrade myself. So, I choose to jump out of my comfortable cage and forage challenges. In my opinion, It is a truly tiger that runs above Africa prairie not one in the fancy cage. Finally, I literally hope that my goal will be hit after one year and start with a more rough journey (Odyssey).]]></content>
      <categories>
        <category>Life log</category>
      </categories>
      <tags>
        <tag>Shanghai</tag>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Using docker command to obtain dockers' IP]]></title>
    <url>%2Fposts%2Fde75b356.html</url>
    <content type="text"><![CDATA[check specific container’s ip address:1docker inspect -f '&#123;&#123;range.NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;' your_container_name_or_id check all containers’ ip address:1docker inspect -f '&#123;&#123;.Name&#125;&#125; - &#123;&#123;range.NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;' $(docker ps -aq)]]></content>
      <categories>
        <category>Operation</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Some terms in Big Data Ecosystem]]></title>
    <url>%2Fposts%2Faa930aca.html</url>
    <content type="text"><![CDATA[DMP(Data Management Plateform)A palteform for collecting and managing data for digital marketing purpose. DSP(Demand-side Plateform)A palteform that alows buyers of online advertising to manage ad exchange and pay to buy some adversiting banners according to Real-time bidding. SSP(Supply-side Plateform)A palteform that alows web publisher or digital media owner to manage their advertising banners and receive money from this plateform. MDM(Master Data Management)A business method that help companies or enterprises to integrate, manage, store critical data in a single point of reference.These data can provide for other busniess plateforms or business systems(B2B, B2C, CRM, OMS and etc).And master data also are useful for marketing decision and marketing analysis.In china, Alibaba announced a business term(“数据中台”) that is based on MDM.So, in the next few years, we need to build a digital smart plateform to collect all sources of busniess data that can provideinformation for all kinds of business systems or plateform and bread down obstacles between business systems in companies or enterpises.]]></content>
      <categories>
        <category>Back-end</category>
        <category>BigData</category>
      </categories>
      <tags>
        <tag>BigData</tag>
        <tag>DMP</tag>
        <tag>MDM</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[Hexo]Some tricks for using hexo efficiently]]></title>
    <url>%2Fposts%2Feacbb695.html</url>
    <content type="text"><![CDATA[change theme add theme to your hexo (eg. theme next) 1git clone https://github.com/theme-next/hexo-theme-next themes/next update your blog config file(_config.yml, not your theme config file) 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next add RSS plugin install RSS tools by npm 1npm install --save hexo-generator-feed update your blog config file(_config.yml, not your theme config file) 12345feed: # RSS订阅插件 type: atom path: atom.xml limit: 0plugins: hexo-generate-feed update your theme config file(theme/_config.yml) 1234# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link, and install hexo-generator-feed: `npm install hexo-generator-feed --save`.# Set rss to specific value if you have burned your feed already.rss: /atom.xml change the code block theme1234# Code Highlight theme# Available values: normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: night record the number of viewers12345678910# Show Views/Visitors of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzibusuanzi_count: enable: true total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: true post_views_icon: eye generate the excerptThere are two methods for generating excerpt for home page. update theme config file (theme/next/_config.yml)It is not good for you when you are using markdown language because of bad show effect. 12345# Automatically Excerpt. Not recommend.# Use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: true length: 300 add markdown code in your post to control excerpt accurately 1&lt;!-- more --&gt; add search plugin install search plugin 1npm install hexo-generator-search --save update blog config file 12345search: path: search.xml field: post format: html limit: 10000 update theme config file 1234567891011# Local search# Dependencies: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 # unescape html strings to the readable one unescape: false add share plugin get module from github 12cd themes/nextgit clone https://github.com/theme-next/theme-next-needmoreshare2 source/lib/needsharebutton update theme config file 12345678910111213141516needmoreshare2: enable: true postbottom: enable: true options: iconStyle: box boxForm: horizontal position: bottomCenter networks: Weibo,Wechat,Twitter,Facebook float: enable: false options: iconStyle: box boxForm: horizontal position: middleRight networks: Weibo,Wechat,Twitter,Facebook add google analytics update theme config file 12# Google Analyticsgoogle_analytics: your google track code add reward update theme config file 123456789# Reward# If true, reward would be displayed in every article by default.# And you can show or hide one article specially through add page variable `reward: true/false`.reward: enable: true comment: Thanks For Your Donation! wechatpay: /images/wechatpay.jpg alipay: /images/alipay.jpg #bitcoin: /images/bitcoin.jpg generate a permanent post address install plugin 1npm install hexo-abbrlink --save update blog config file 123456# permalink: :year/:month/:day/:title/# permalink_defaults:permalink: posts/:abbrlink.htmlabbrlink: alg: crc32 # 算法：crc16(default) and crc32 rep: hex # 进制：dec(default) and hex add comment module (valine) sign up for a leancloud account create a application for your comment system copy AppID and AppKey from your dashboard paste AppID and AppKey into your theme config file 123456789101112valine: enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version. appid: axxDLm5SBUPG3DcHu79Jwn00-gzGzoHsz # your leancloud application appid appkey: XKifYmgTXg3JM7XThQYo5NiL # your leancloud application appkey notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: Just go go # comment box placeholder avatar: mm # gravatar style guest_info: nick,mail # custom comment header pageSize: 10 # pagination size visitor: true # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html comment_count: true # if false, comment count will only be displayed in post page, not in home page create classes in your leancloud account to store your data [not required] you can change your valine lanuage (themes/next/layout/_third-party/comments/valine.swig) 12345678910111213new Valine(&#123; el: '#comments', lang: 'en', verify: &#123;&#123; theme.valine.verify &#125;&#125;, notify: &#123;&#123; theme.valine.notify &#125;&#125;, appId: '&#123;&#123; theme.valine.appid &#125;&#125;', appKey: '&#123;&#123; theme.valine.appkey &#125;&#125;', placeholder: '&#123;&#123; theme.valine.placeholder &#125;&#125;', avatar: '&#123;&#123; theme.valine.avatar &#125;&#125;', meta: guest, pageSize: '&#123;&#123; theme.valine.pageSize &#125;&#125;' || 10, visitor: &#123;&#123; theme.valine.visitor &#125;&#125; &#125;); [not required] you can also add white list for security use image plugin install “hexo-asset-image” plugin 1npm install hexo-asset-image --save update your blog config file (_config.yml) 1post_asset_folder: true if you use abbrlink plugin to change your permalink attribute in your blog config file, you need to edit this plugin to fit your config (node_modules/hexo-asset-image/index.js). Then you add a code block into this javascript file. 123var link = data.permalink; link = link.replace('.html', '/'); //新增加，针对修改后的permalinkvar beginPos = getPosition(link, '/', 3) + 1; Ok, you can generate your new static html file. 12hexo cleanhexo g add creative commons module to your blogIt is convenient and useful for bloger to announce your blog copyright announcement. So, you can add this below your posts or add this in your profile information page. update your theme config file # Creative Commons 4.0 International License. # https://creativecommons.org/share-your-work/licensing-types-examples # Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero creative_commons: license: by-nc-sa sidebar: true post: true]]></content>
      <categories>
        <category>Front-end</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[Hexo]Create a blog with hexo in github]]></title>
    <url>%2Fposts%2Ffe740d97.html</url>
    <content type="text"><![CDATA[copy local ssh public key to github install npm, git install hexo by npm 1npm install init hexo 1hexo init install other softwares by npm 1npm install edit file “_config.yml” and write your git address 1234deploy: type: git repository: github项目地址 branch: master install hexo deployment tool 1npm install hexo-deployer-git --save generate static pages by hexo 1hexo g deploy static pages to github 1hexo d using local tool to pre-check your blog 1hexo s access to your github blog 1http://用户名.github.io]]></content>
      <categories>
        <category>Front-end</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
